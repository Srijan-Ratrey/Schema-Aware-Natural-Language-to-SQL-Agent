version: '3.8'

services:
  # NL2SQL API Service
  nl2sql-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - NL2SQL_API_KEY=your-secure-api-key-here
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data  # Mount volume for SQLite databases
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=nl2sql_db
      - POSTGRES_USER=nl2sql_user
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional init script
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - postgres  # Only start with --profile postgres

  # Redis Cache (optional for future caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    profiles:
      - cache  # Only start with --profile cache

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL certificates
    depends_on:
      - nl2sql-api
    restart: unless-stopped
    profiles:
      - proxy  # Only start with --profile proxy

volumes:
  postgres_data:

networks:
  default:
    name: nl2sql-network 